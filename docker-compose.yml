# -----------------------------------------------------------
# üß© mark-inc ‚Äî docker-compose.yml (DEV)
# -----------------------------------------------------------
# –¶–µ–ª—å: –ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å hot reload —á–µ—Ä–µ–∑ Nginx-–ø—Ä–æ–∫—Å–∏.
# –¶–µ–ø–æ—á–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: browser ‚Üí nginx(80) ‚Üí client(3000) ‚Üí server(4000) ‚Üí db(5432)
# -----------------------------------------------------------

version: "3.9"  # ‚ö†Ô∏è Docker Desktop –º–æ–∂–µ—Ç —Ä—É–≥–∞—Ç—å—Å—è, —á—Ç–æ `version` —É—Å—Ç–∞—Ä–µ–ª ‚Äî —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ.

services:
  # ---------------------------------------------------------
  # üêò PostgreSQL ‚Äî –æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
  # ---------------------------------------------------------
  db:
    image: postgres:16
    container_name: markinc_db
    restart: always
    environment:
      # –≠—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å DATABASE_URL –≤ server/.env
      POSTGRES_USER: mark_inc
      POSTGRES_PASSWORD: mark_inc_db_password_2025
      POSTGRES_DB: mark_db
    ports:
      - "5438:5432"   # localhost:5438 ‚Üí –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:5432 (–¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Ö–æ—Å—Ç–∞)
    volumes:
      - db_data:/var/lib/postgresql/data  # —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (persist)

  # ---------------------------------------------------------
  # ‚öôÔ∏è Backend ‚Äî Express + TypeScript + Prisma
  # ---------------------------------------------------------
  server:
    build:
      context: ./server              # –∫–æ—Ä–µ–Ω—å Dockerfile
      dockerfile: Dockerfile
      target: dev                    # üëà –∏—Å–ø–æ–ª—å–∑—É–µ–º dev stage (prod ‚Äî –¥–ª—è –¥–µ–ø–ª–æ—è)
    container_name: markinc_server
    restart: always
    ports:
      - "4000:4000"
      - "5555:5555"    # üëà –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–±—Ä–æ—Å –¥–ª—è Prisma Studio (DEV ONLY)
    env_file:
      - ./server/.env                # —Å–æ–¥–µ—Ä–∂–∏—Ç DATABASE_URL, PORT, NODE_ENV
    depends_on:
      - db                           # –∂–¥—ë—Ç, –ø–æ–∫–∞ –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è Postgres
    volumes:
      - ./server:/app                # –º–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (hot reload)
      - /app/node_modules            # –∏—Å–∫–ª—é—á–∞–µ–º node_modules, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ç–∏—Ä–∞–ª–∏—Å—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    environment:
      NODE_ENV: development
      PORT: 4000
    # üëâ —Å–µ—Ä–≤–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ (—á–µ—Ä–µ–∑ nodemon)
    # üîπ Prisma –∫–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ `npx prisma generate`

  # ---------------------------------------------------------
  # üíª Frontend ‚Äî Next.js (App Router) + Axios + Sass
  # ---------------------------------------------------------
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev                    # multi-stage Dockerfile: dev stage –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    container_name: markinc_client
    restart: always
    env_file:
      - ./client/.env
    ports:
      - "3000:3000"
    depends_on:
      - server                       # –∫–ª–∏–µ–Ω—Ç –∂–¥—ë—Ç API
    volumes:
      - ./client:/app                # –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ (hot reload)
      - /app/node_modules
    environment:
      # ‚ö†Ô∏è –í–∞–∂–Ω–æ! –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–Ω–∞–µ—Ç Docker DNS ‚Äî —Ç–æ–ª—å–∫–æ localhost.
      # –ü–æ—ç—Ç–æ–º—É —É–∫–∞–∑—ã–≤–∞–µ–º http://localhost/api ‚Üí –∑–∞–ø—Ä–æ—Å –ø–æ–π–¥—ë—Ç —á–µ—Ä–µ–∑ Nginx:80,
      # –∞ Nginx –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç /api ‚Üí server:4000/
      NEXT_PUBLIC_API_URL: http://localhost/api
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"    # –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ hot reload –ø–æ–¥ Windows
      WATCHPACK_POLLING: "true"      # –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è macOS
      NEXT_TELEMETRY_DISABLED: "1"   # –æ—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é Next.js

  # ---------------------------------------------------------
  # üåê Nginx ‚Äî reverse proxy (client + server)
  # ---------------------------------------------------------
  nginx:
    image: nginx:alpine
    container_name: markinc_proxy
    ports:
      - "80:80"                      # –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞: http://localhost
    volumes:
      # ‚ö†Ô∏è –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ –∏–º–µ–Ω–Ω–æ —Ñ–∞–π–ª, –Ω–µ –ø–∞–ø–∫—É.
      # nginx.dev.conf –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º —Ä–∞–±–æ—á–∏–º –∫–æ–Ω—Ñ–∏–≥–æ–º Nginx.
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server
    restart: always

# ---------------------------------------------------------
# üóÑÔ∏è volumes ‚Äî —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
# ---------------------------------------------------------
volumes:
  db_data:

# ---------------------------------------------------------
# üìò –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
# ---------------------------------------------------------
# üß† –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è:
#  - Nginx —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 80 –Ω–∞ —Ö–æ—Å—Ç–µ.
#  - /api/* ‚Üí server:4000 (Express API)
#  - /* ‚Üí client:3000 (Next.js —Ñ—Ä–æ–Ω—Ç)
#  - client –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ http://localhost/api ‚Üí Nginx ‚Üí server
#
# üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞:
#  docker compose down -v
#  docker compose up --build
#
# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞:
#  http://localhost                ‚Üí –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ñ—Ä–æ–Ω—Ç
#  curl http://localhost/api/hello ‚Üí {"message":"Hello from mark-inc server"}
#
# üîß –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏:
#  - ‚ùå 500 –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Next.js ‚Üí –Ω–µ—Ç default export –≤ page/layout.
#  - ‚ùå net::ERR_NAME_NOT_RESOLVED ‚Üí NEXT_PUBLIC_API_URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ http://nginx/api (–Ω—É–∂–Ω–æ localhost).
#  - ‚ùå 502 / –ø—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Üí Next –Ω–µ —Å–ª—É—à–∞–µ—Ç 0.0.0.0 ‚Üí –¥–æ–±–∞–≤—å "-H 0.0.0.0" –≤ dev-—Å–∫—Ä–∏–ø—Ç.
#  - ‚ùå Prisma –æ—à–∏–±–∫–∞ (P1001) ‚Üí DATABASE_URL –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ db:5432, –Ω–µ localhost.
#
# üí° –ü—Ä–æ–¥–∞–∫—à–µ–Ω:
#  - .env —Ñ–∞–π–ª—ã –Ω–µ –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –≤ –æ–±—Ä–∞–∑—ã ‚Äî –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–¥–∞—é—Ç—Å—è –≤ environment —Å–µ–∫—Ü–∏–∏.
#  - NEXT_PUBLIC_API_URL –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –¥–æ–º–µ–Ω (https://mark-inc.ru/api)
#  - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π docker-compose.prod.yml —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ª–æ—è–º–∏.
#
# ‚úÖ –°–æ–≤–µ—Ç:
#  –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å hot reload ‚Äî –ø–µ—Ä–µ—Å–æ–±–µ—Ä–∏ client:
#  docker compose stop client && docker compose up --build client
# -----------------------------------------------------------
